import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import '../utils/build_info.dart';

class AboutScreen extends StatelessWidget {
  const AboutScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    
    return Scaffold(
      appBar: AppBar(
        title: const Text('–û –ø—Ä–æ–≥—Ä–∞–º–º–µ'),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            Center(
              child: Column(
                children: [
                  Icon(
                    Icons.monitor_heart,
                    size: 80,
                    color: theme.colorScheme.primary,
                  ),
                  const SizedBox(height: 16),
                  Text(
                    'Glances Monitor',
                    style: theme.textTheme.headlineMedium?.copyWith(
                      fontWeight: FontWeight.bold,
                      color: theme.colorScheme.primary,
                    ),
                  ),
                  const SizedBox(height: 8),
                  FutureBuilder<Map<String, String>>(
                    future: BuildInfo.getFullBuildInfo(),
                    builder: (context, snapshot) {
                      if (snapshot.hasData) {
                        final info = snapshot.data!;
                        return Column(
                          children: [
                            Text(
                              '–í–µ—Ä—Å–∏—è ${info['version']}',
                              style: theme.textTheme.titleMedium?.copyWith(
                                color: theme.colorScheme.outline,
                              ),
                            ),
                            const SizedBox(height: 4),
                            Text(
                              '–°–±–æ—Ä–∫–∞ ${info['buildNumber']}',
                              style: theme.textTheme.bodyMedium?.copyWith(
                                color: theme.colorScheme.outline.withValues(alpha: 0.7),
                              ),
                            ),
                            const SizedBox(height: 4),
                            Text(
                              'Commit: ${info['commitHash']}',
                              style: theme.textTheme.bodySmall?.copyWith(
                                color: theme.colorScheme.outline.withValues(alpha: 0.6),
                                fontFamily: 'monospace',
                              ),
                            ),
                            const SizedBox(height: 4),
                            Text(
                              '–î–∞—Ç–∞: ${info['buildDate']}',
                              style: theme.textTheme.bodySmall?.copyWith(
                                color: theme.colorScheme.outline.withValues(alpha: 0.6),
                              ),
                            ),
                          ],
                        );
                      } else {
                        return Text(
                          '–í–µ—Ä—Å–∏—è 1.0.0',
                          style: theme.textTheme.titleMedium?.copyWith(
                            color: theme.colorScheme.outline,
                          ),
                        );
                      }
                    },
                  ),
                ],
              ),
            ),
            const SizedBox(height: 32),
            
            // –û–ø–∏—Å–∞–Ω–∏–µ
            _buildSection(
              title: '–û–ø–∏—Å–∞–Ω–∏–µ',
              content: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ Glances REST API. –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏, —Å–µ—Ç–µ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.',
              icon: Icons.info_outline,
            ),
            
            const SizedBox(height: 24),
            
            // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            _buildSection(
              title: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',
              content: '',
              icon: Icons.star_outline,
              children: [
                _buildFeatureItem('üñ•Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–æ–≤', '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ CPU, –ø–∞–º—è—Ç–∏, –¥–∏—Å–∫–∞, —Å–µ—Ç–∏'),
                _buildFeatureItem('üåê –°–µ—Ç–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ —Ç—Ä–∞—Ñ–∏–∫–∞'),
                _buildFeatureItem('üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ endpoint', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Glances API'),
                _buildFeatureItem('üìä –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –º–µ—Ç—Ä–∏–∫–∏', '–í—ã–±–æ—Ä –Ω—É–∂–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞'),
                _buildFeatureItem('üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Basic Auth –∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'),
                _buildFeatureItem('üì± –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Material Design'),
              ],
            ),
            
            const SizedBox(height: 24),
            
            // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏
            _buildSection(
              title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏',
              content: '',
              icon: Icons.settings_outlined,
              children: [
                _buildTechItem('Flutter SDK', '>=3.0.0'),
                _buildTechItem('Glances API', 'v3/v4'),
                _buildTechItem('–ü—Ä–æ—Ç–æ–∫–æ–ª', 'HTTP/HTTPS'),
                _buildTechItem('–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è', 'Basic Auth'),
                _buildTechItem('–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã', 'Android, iOS'),
              ],
            ),
            
            const SizedBox(height: 24),
            
            // –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
            _buildSection(
              title: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
              content: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ Glances API —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
              icon: Icons.person_outline,
            ),
            
            const SizedBox(height: 24),
            
            // –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
            _buildSection(
              title: '–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥',
              content: '–ü—Ä–æ–µ–∫—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub.',
              icon: Icons.code,
              children: [
                ListTile(
                  leading: const Icon(Icons.link),
                  title: const Text('GitHub Repository'),
                  subtitle: const Text('https://github.com/ncux-ad/glances_monitor'),
                  onTap: () => _openGitHub(context),
                ),
              ],
            ),
            
            const SizedBox(height: 24),
            
            // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            Row(
              children: [
                Expanded(
                  child: ElevatedButton.icon(
                    onPressed: () => _showLicenseDialog(context),
                    icon: const Icon(Icons.description_outlined),
                    label: const Text('–õ–∏—Ü–µ–Ω–∑–∏—è'),
                  ),
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: ElevatedButton.icon(
                    onPressed: () => _copyVersionInfo(context),
                    icon: const Icon(Icons.copy),
                    label: const Text('–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'),
                  ),
                ),
              ],
            ),
            
            const SizedBox(height: 16),
            
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ
            Center(
              child: Text(
                '–°–±–æ—Ä–∫–∞: ${DateTime.now().year}.${DateTime.now().month.toString().padLeft(2, '0')}.${DateTime.now().day.toString().padLeft(2, '0')}',
                style: theme.textTheme.bodySmall?.copyWith(
                  color: theme.colorScheme.outline,
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildSection({
    required String title,
    required String content,
    required IconData icon,
    List<Widget>? children,
  }) {
    return Card(
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(icon, size: 24),
                const SizedBox(width: 12),
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ],
            ),
            if (content.isNotEmpty) ...[
              const SizedBox(height: 12),
              Text(
                content,
                softWrap: true,
                overflow: TextOverflow.visible,
              ),
            ],
            if (children != null) ...[
              const SizedBox(height: 12),
              ...children,
            ],
          ],
        ),
      ),
    );
  }

  Widget _buildFeatureItem(String title, String description) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const SizedBox(width: 8),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(fontWeight: FontWeight.w500),
                ),
                Text(
                  description,
                  style: TextStyle(
                    fontSize: 12,
                    color: Colors.grey[600],
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTechItem(String label, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 2),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(label),
          Text(
            value,
            style: const TextStyle(fontWeight: FontWeight.w500),
          ),
        ],
      ),
    );
  }

  void _showLicenseDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('–õ–∏—Ü–µ–Ω–∑–∏—è'),
        content: const SingleChildScrollView(
          child: Text(
            'Glances Monitor v0.0.1\n\n'
            '–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è "–∫–∞–∫ –µ—Å—Ç—å" –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –≥–∞—Ä–∞–Ω—Ç–∏–π.\n\n'
            '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –æ–∑–Ω–∞—á–∞–µ—Ç —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n\n'
            '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ —É–±—ã—Ç–∫–∏, –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n'
            '¬© 2025 Glances Monitor. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.',
          ),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('–ó–∞–∫—Ä—ã—Ç—å'),
          ),
        ],
      ),
    );
  }

  void _copyVersionInfo(BuildContext context) {
    final versionInfo = '''
Glances Monitor v0.0.1
–°–±–æ—Ä–∫–∞: ${DateTime.now().year}.${DateTime.now().month.toString().padLeft(2, '0')}.${DateTime.now().day.toString().padLeft(2, '0')}
–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${Theme.of(context).platform.name}
Flutter SDK: >=3.0.0
Glances API: v3/v4
''';
    
    Clipboard.setData(ClipboardData(text: versionInfo));
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  }

  void _openGitHub(BuildContext context) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å url_launcher
    // –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    // GitHub: https://github.com/ncux-ad/glances_monitor
  }
}
